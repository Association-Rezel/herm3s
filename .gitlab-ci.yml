stages:
  - test
  - build
  - deploy

include:
  - project: 'fai/shared-ci'
    file: .gitlab-ci-template-vault_get_secrets.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml
  - template: Jobs/Secret-Detection.latest.gitlab-ci.yml

variables:
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  DEPLOY_ENV: "prod"

linting:
  stage: test
  image: python
  script:
    - pip install black
    - black --check .
  rules:
    - when: always

unit-tests:
  stage: test
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  script:
    - docker compose -f tests/docker-compose.unit_tests.yaml up --build --exit-code-from unit_tests
  rules:
    - if: $SKIP_UNIT_TESTS == "true"
      when: never
    - when: always
  tags:
    - dind

sonarqube:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  id_tokens:
    VAULT_ID_TOKEN:
      aud: $VAULT_SERVER_URL
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_HOST_URL: https://sonarqube.core.rezel.net
    VAULT_SERVER_URL: https://vault.fai.rezel.net
    VAULT_SECRETS_ROLE: service_hermes
    VAULT_SECRETS_PATH: kv/data/hermes_ci_secrets
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  before_script:
    - mkdir /tmp/bin
    - PATH=$PATH:/tmp/bin
    - curl -o /tmp/bin/jq -L https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64
    - chmod +x /tmp/bin/jq
    - !reference [.vault_service_secrets, before_script] # Retrieve SONAR_TOKEN
  script: 
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - when: always

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${IMAGE_TAG}"
  rules: 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    # Substitute environment variables in Kubernetes manifests
    - mkdir k8s-envsubst
    - |
      for file in k8s/*.yaml; do
        envsubst < $file | tee k8s-envsubst/$(basename $file)
      done
    # Apply Kubernetes manifests
    - kubectl config use-context fai/k8s-cluster:main-k8s-agent
    - kubectl apply -f k8s-envsubst/
  rules: 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
