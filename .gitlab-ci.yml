stages:
  - pre_checks
  - build
  - deploy

linting:
  stage: pre_checks
  image: python
  script:
    - pip install black
    - black --check .
  rules:
    - when: always

unit-tests:
  stage: pre_checks
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  script:
    - docker compose -f tests/docker-compose.unit_tests.yaml up --build --exit-code-from unit_tests
  rules:
    - if: $SKIP_UNIT_TESTS == "true"
      when: never
    - when: always
  tags:
    - dind

variables:
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  DEPLOY_ENV: "prod"

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${IMAGE_TAG}"
  rules: 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context fai/k8s-cluster:main-k8s-agent
    - kubectl apply -f k8s/
  rules: 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
